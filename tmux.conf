# colors

# reload config without restart tmux
bind R source-file ~/.config/tmux/tmux.conf \; display-message "  Config reloaded..".

# select panes with the mouse
set -g mouse on

# extra reading about 2.1 changes
# https://github.com/tmux/tmux/issues/145
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# start window numbering at 1 for easier switching
set -g base-index 1

# make sure we use the right default TERM
set-option -g default-terminal $TERM

# store lots of history
set -g history-limit 100000

bind-key P command-prompt -p 'save scrollback to filename:' -I '~/tmux_scrollback.txt' 'capture-pane -S - -E -; save-buffer %1 ; delete-buffer'

# bind space to cycle through windows
unbind Space
bind-key Space next-window

# Status bar content and padding
set -g status-left "#{host_short}:[#{session_name}] â–¶\t "
set -g status-left-length 50
set -g status-right-length 50
set -g status-right "| [PID #{pane_pid}] |%d-%h-%Y %H:%M :: #(TZ=UTC date -u +%%H:%%M:%%S) UTC"

# Update every second, otherwise only updates when switching panes etc
set -g status-interval 1

# colors for status bar
set-option -g status-style 'fg=#f1f3f4 bg=#1d1f21'

# highlight the current window
setw -g window-status-current-style 'bg=#f1f3f4 fg=#1d1f21'

# arrows for current active pane
set-option -g pane-border-indicators both

# set format of current window title
set-window-option -g window-status-current-format "|#W|"

# enable wm window titles
set -g set-titles on
setw -g automatic-rename on

# vi mappings in various places of tmux
set-window-option -g mode-keys vi

# clipboard management
# from https://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future
#  Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe "pbcopy"

#  Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe "pbcopy"

# end clipboard management

# Bind ctrl+shift+left and ctrl+shift+right to move a tmux window left/right
bind-key -n C-S-Left swap-window -t -1\; select-window -t -1
bind-key -n C-S-Right swap-window -t +1\; select-window -t +1


# some magic to allow switching of tmux and vim splits interchangeably
bind -n 'C-h' run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n 'C-j' run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n 'C-k' run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n 'C-l' run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"

# Background: When I SSH into a machine using ssh agent forwarding, this works by setting the env var `SSH_AUTH_SOCK`
# to a temporary socket file in the shell that you just SSH'd into.
# When you start tmux, it copies the env vars from the current shell, so tmux gets `SSH_AUTH_SOCK` too.
# Problem:
# If you disconnect from the current SSH session, when you reconnect and re-attach using `tmux attach-session -t 0`
# the tmux has your OLD environment variables
# This line of configuration says "when you attach to a tmux session, update these environment variables from
# the shell that ran `tmux attach-session`
set-option -g update-environment "SSH_AUTH_SOCK"
# HOWEVER -- this is not enough. This updates the env vars for the tmux client process, but not the shells running
# within each of your tmux panes.
# See zshrc for the final step here.
